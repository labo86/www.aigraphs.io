{"version":3,"sources":["serviceWorker.ts","modules/base/controller/Context.jsx","modules/base/component/BorderContainer.jsx","modules/base/component/CollapsableAlert.jsx","modules/base/assets/images/aigraphs_full.png","modules/base/component/AppBar.jsx","modules/graph_member/view/GraphMemberJoin.jsx","modules/graph_member/view/GraphMemberSubmit.jsx","modules/graph_member/view/Main.jsx","translations/i18n.jsx","translations/en/translations.jsx","modules/graph/view/GraphCreate.jsx","modules/graph/view/GraphList.jsx","modules/graph/view/Chart.jsx","modules/graph/view/GraphResult.jsx","modules/graph/view/GraphDetails.jsx","modules/graph/view/Main.jsx","modules/base/view/Home.jsx","modules/base/view/Main.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","Context","React","createContext","useStyles","makeStyles","theme","root","padding","spacing","BorderContainer","props","classes","className","children","useAlert","useState","open","message","title","severity","alert","setAlert","alertSetter","closeFunction","handleFetchWithAlert","exception","String","Response","status","statusText","Error","name","JSON","stringify","CollapsableAlert","Collapse","in","Alert","onClose","AlertTitle","menuButton","marginRight","flexGrow","logo","maxWidth","AppBar","position","color","Toolbar","src","alt","GraphMemberJoin","endpoint","useContext","history","useRouteMatch","path","useHistory","query","URLSearchParams","useLocation","search","t","useTranslation","setName","has","get","partyId","setPartyId","handleSubmit","event","a","preventDefault","trim","form_data","FormData","set","url","fetch","method","body","credentials","response","ok","json","push","onSubmit","Typography","variant","TextField","label","margin","fullWidth","value","onChange","e","target","InputProps","readOnly","shrink","Box","pt","pb","Button","type","startIcon","chip","width","textAlign","GraphMemberSubmit","dimensionName","setDimensionName","itemList","setItemList","hasNext","setHasNext","_this","useRef","dimensionList","currentDimension","submitData","setDimensionOptions","nextDimension","dimensions","current","items","length","console","log","saveCurrentData","dimensionData","index","id","currentDimensionIndex","currentDimensionId","jsonData","headers","fetchList","key","data","useEffect","List","list","setList","animation","map","item","ListItem","Chip","onClick","Main","exact","component","i18n","use","initReactI18next","init","resources","en","translation","graph","create","graph_name","create_graph","my_graphs","back","horizontal_dimension","vertical_dimension","elements","sent","sent_options_message","send","next","share_link","generate_results","graph_created","graph_code","join","join_to_graph","your_nickname","sort_by","changeLanguage","backdrop","zIndex","drawer","GraphCreate","getAccessTokenSilently","useAuth0","formName","setFormName","formHorizontalDimension","setFormHorizontalDimension","formVerticalDimension","setFormVerticalDimension","formItems","setFormItems","loading","setLoading","token","horizontalDimension","verticalDimension","normalizeFormItemInput","Authorization","input","split","normalizedItemList","placeholder","multiline","rows","Backdrop","CircularProgress","GraphList","partyList","setPartyList","party_list","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","scope","Link","to","AmbitionMatrix","calculateUnit","labelX","labelY","x","this","area","extent","y","font","size","frame","range","min","max","unit","text","attributes","imageElement","content","querySelector","innerHTML","image","setAttribute","GraphResult","party_id","useParams","svgContainer","fetchResult","chartId","drawChart","dimensionIdList","Object","keys","axisX","axisY","dimXName","dimYName","points","itemId","itemX","stats","itemY","point","avg","stdDevX","std_dev","stdDevY","Math","putPoint","elem","chart","drawFrame","render","ref","height","transform","GraphDetails","graphData","setGraphData","values","protocol","host","navigator","clipboard","writeText","withAuthenticationRequired","ButtonGroup","onRedirecting","Home","Provider","process","CssBaseline","GraphMemberMain","GraphMain","ReactDOM","StrictMode","domain","clientId","audience","redirectUri","origin","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"0JAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kHCdSC,EAFCC,IAAMC,gB,gBCChBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAASF,EAAMG,QAAQ,QAIhB,SAASC,EAAgBC,GACpC,IAAMC,EAAUR,IAEhB,OAAQ,qBAAKS,UAAWD,EAAQL,KAAxB,SACHI,EAAMG,W,+BCTFC,EAAW,WACpB,MAA0Bb,IAAMc,SAAS,CAAEC,MAAM,EAAOC,QAAS,GAAIC,MAAO,GAAIC,SAAU,UAA1F,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAc,SAACL,EAASC,EAAOC,GAEjCE,EAAS,CACLL,MAAM,EAAMC,QAASA,EAASC,MAAOA,EAAOC,SAAUA,EAAUI,cAAe,WAC3EF,EAAS,2BAAID,GAAL,IAAYJ,MAAM,SAKtC,MAAO,CACHI,MAAOA,EACPC,SAAUC,EACVE,qBAAuB,SAACC,GACfA,aAAqBC,OACtBJ,EAAY,QAASG,EAAW,SAC1BA,aAAqBE,SAC3BL,EAAY,SAAD,OAAUG,EAAUG,QAApB,UAAiCH,EAAUI,YAAc,SAC9DJ,aAAqBK,MAC3BR,EAAY,GAAD,OAAIG,EAAUM,MAAd,UAAyBN,EAAUR,SAAW,SAEzDK,EAAY,QAASU,KAAKC,UAAUR,GAAY,YAKjD,SAASS,EAAT,GAA6E,IAAjDlB,EAAgD,EAAhDA,KAAMG,EAA0C,EAA1CA,SAAUD,EAAgC,EAAhCA,MAAOD,EAAyB,EAAzBA,QAASM,EAAgB,EAAhBA,cAEvE,OAAQ,cAACY,EAAA,EAAD,CAAUC,GAAIpB,EAAd,SACJ,eAACqB,EAAA,EAAD,CAAOC,QAASf,EAAeJ,SAAUA,EAAzC,UACI,cAACoB,EAAA,EAAD,UAAarB,IACZD,O,+BCrCE,MAA0B,0CCWnCd,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmC,WAAY,CACRC,YAAapC,EAAMG,QAAQ,IAE/BU,MAAO,CACHwB,SAAU,GAEdC,KAAM,CACFC,SAAU,IACVH,YAAa,YAIN,SAASI,IACpB,IAAMlC,EAAUR,IAEhB,OACI,cAAC,IAAD,CAAW2C,SAAS,SAASC,MAAM,cAAnC,SACI,cAACC,EAAA,EAAD,UACI,qBAAKC,IAAKN,EAAMO,IAAI,WAAWtC,UAAWD,EAAQgC,WCZnD,SAASQ,IACpB,IAAQC,EAAaC,qBAAWrD,GAAxBoD,SAEFE,GADSC,cAATC,KACUC,eACZC,EARG,IAAIC,gBAAgBC,cAAcC,QASjCC,EAAMC,cAAND,EAER,EAAwB/C,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaiC,EAAb,KACA,EAA8BjD,mBAAS2C,EAAMO,IAAI,YAAcP,EAAMQ,IAAI,YAAc,IAAvF,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAgDtD,IAAzCM,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUG,EAAxB,EAAwBA,qBAElB6C,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACjBD,EAAME,iBAGkB,KADHzC,EAAK0C,OAHT,uBAKbpD,EAASyC,EAAE,iBAAkBA,EAAE,SAAU,SAL5B,iCAQbY,EAAY,IAAIC,UACVC,IAAI,OAAQ7C,GACtB2C,EAAUE,IAAI,WAAYT,GAVT,SAaTU,EAbS,UAaAzB,EAbA,gCAcU0B,MAAMD,EAAK,CAC9BE,OAAQ,MACRC,KAAMN,EACNO,YAAa,YAjBJ,YAcPC,EAdO,QAoBEC,GApBF,uBAqBHD,EArBG,yBAwBMA,EAASE,OAxBf,eAyBb9B,EAAQ+B,KAAR,wBAzBa,kDA4Bb7D,EAAqB,EAAD,IA5BP,0DAAH,sDAgClB,OACI,gCACA,cAAC,EAAD,IACA,eAACf,EAAD,WACA,uBAAM6E,SAAUjB,EAAhB,UACA,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B1B,EAAE,mBAC5B,cAAC2B,EAAA,EAAD,CACIC,MAAO5B,EAAE,iBACT6B,OAAO,SACP5D,KAAK,OACL6D,WAAS,EACTJ,QAAQ,WACRK,MAAO9D,EACP+D,SAAW,SAAAC,GAAC,OAAI/B,EAAQ+B,EAAEC,OAAOH,UAGrC,cAACJ,EAAA,EAAD,CACIC,MAAO5B,EAAE,cACT/B,KAAK,WACL4D,OAAO,SACPC,WAAS,EACTK,WAAY,CAAEC,UAAU,EAAMC,QAAQ,GACtCX,QAAQ,WACRK,MAAO1B,EACP2B,SAAW,SAAAC,GAAC,OAAI3B,EAAW2B,EAAEC,OAAOH,UAExC,cAACO,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACC,EAAA,EAAD,CACIC,KAAK,SACLhB,QAAQ,YACRzC,MAAM,UACN0D,UAAW,cAAC,IAAD,IAJf,SAKE3C,EAAE,eAGZ,cAAC5B,EAAD,eAAsBd,U,+CCtFpBjB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqG,KAAM,CACFC,MAAO,OACPC,UAAW,cAIJ,SAASC,IACpB,IAAQzD,EAAaC,qBAAWrD,GAAxBoD,SAER,EAA0CnD,IAAMc,SAAS,IAAzD,mBAAO+F,EAAP,KAAsBC,EAAtB,KACA,EAAgC9G,IAAMc,SAAS,IAA/C,mBAAOiG,EAAP,KAAiBC,EAAjB,KACMtG,EAAUR,IAEhB,EAAgDW,IAAzCM,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUG,EAAxB,EAAwBA,qBACxB,EAA8BvB,IAAMc,UAAS,GAA7C,mBAAOmG,EAAP,KAAgBC,EAAhB,KACQrD,EAAMC,cAAND,EAEJsD,EAAQnH,IAAMoH,OAAO,CACrBL,SAAS,GACTM,cAAc,GACdC,iBAAmB,EACnBC,WAAa,KAQXC,EAAsB,SAACC,GACzB,IAAIC,EAAaP,EAAMQ,QAAQN,cAC3BO,EAAQT,EAAMQ,QAAQZ,SACrBU,GAAiBC,EAAWG,SAKjCC,QAAQC,IAAIN,GACZK,QAAQC,IAAIL,GAEZV,EAAYY,GACZd,EAAiBY,EAAWD,GAAe3F,MAC3CqF,EAAMQ,QAAQL,iBAAmBG,EACjCP,EAAWO,EAAgBC,EAAWG,OAAS,KAG7CG,EAAkB,WACpB,IAD0B,EACtBC,EAAgB,GAChBC,EAAQnB,EAASc,OAFK,cAGRd,GAHQ,IAG1B,2BAA6B,CACzBkB,EADyB,QACNE,IAAMD,EACzBA,KALsB,8BAQ1B,IAAIE,EAAwBjB,EAAMQ,QAAQL,iBACtCe,EAAqBlB,EAAMQ,QAAQN,cAAce,GAAuBD,GAC5EhB,EAAMQ,QAAQJ,WAAWc,GAAsBJ,GAU7C7D,EAAY,uCAAG,gCAAAE,EAAA,6DACjB0D,IADiB,SAITM,EAAWnB,EAAMQ,QAAQJ,WAEzB3C,EANS,UAMAzB,EANA,uCAOU0B,MAAMD,EAAK,CAC9BE,OAAQ,MACRE,YAAa,UACbD,KAAMhD,KAAKC,UAAUsG,GACrBC,QAAS,CACL,eAAgB,sBAZX,WAOPtD,EAPO,QAgBEC,GAhBF,sBAiBHD,EAjBG,OAmBb7D,EAASyC,EAAE,wBAAyBA,EAAE,QAAQ,WAnBjC,kDAsBbtC,EAAqB,EAAD,IAtBP,0DAAH,qDA0BZiH,EAAS,uCAAG,oCAAAlE,EAAA,sEAGNM,EAHM,UAGGzB,EAHH,qCAIa0B,MAAMD,EAAK,CAC9BE,OAAQ,MACRE,YAAa,YANP,WAIJC,EAJI,QASKC,GATL,sBAUAD,EAVA,uBAaOA,EAASE,OAbhB,OAeV,IAAUsD,KAFNC,EAbM,OAcVvB,EAAMQ,QAAQZ,SAAW,GACR2B,EAAKd,MAClBT,EAAMQ,QAAQZ,SAAS3B,KAAK,CAAC+C,GAAIM,EAAK3G,KAAO4G,EAAKd,MAAMa,KAG5D,IAAUA,KADVtB,EAAMQ,QAAQN,cAAgB,GACbqB,EAAKhB,WAClBP,EAAMQ,QAAQN,cAAcjC,KAAK,CAAC+C,GAAIM,EAAK3G,KAAO4G,EAAKhB,WAAWe,KAEtEtB,EAAMQ,QAAQL,iBAAmB,EACjCE,EAAoB,GAvBV,kDA0BVjG,EAAqB,EAAD,IA1BV,0DAAH,qDAkCf,OAJAoH,qBAAU,WACNH,MACD,IAGC,gCACA,cAAC,EAAD,IACI,eAAChI,EAAD,WACJ,+BAAKqD,EAAE,WAAP,IAAmB,+BAAOgD,OAC1B,cAAC+B,EAAA,EAAD,UACI,cAAC,gBAAD,CAAeC,KAAM9B,EAAU+B,QAAS9B,EAAa+B,UAAW,IAAhE,SACChC,EAASiC,KAAI,SAAAC,GAAI,OACd,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMrG,MAAM,UAAUyC,QAAQ,WAAWE,MAAOwD,EAAKnH,KAAMnB,UAAWD,EAAQ+F,QADnEwC,EAAKd,WAO5B,cAAC7B,EAAA,EAAD,CACIf,QAAQ,YACRzC,MAAM,UACNsG,QAASnC,EArFS,WAEtBe,IACA,IAAII,EAAwBjB,EAAMQ,QAAQL,iBAC1CE,EAAoBY,EAAwB,IAiFDhE,EAH3C,SAIYP,EAAVoD,EAAY,OAAY,UAC1B,cAAChF,EAAD,eAAsBd,UCxJf,SAASkI,IACpB,IAAM9F,EAASD,cAATC,KAEN,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+F,OAAK,EAAC/F,KAAI,UAAKA,EAAL,SAAkBgG,UAAWrG,IAC9C,cAAC,IAAD,CAAOoG,OAAK,EAAC/F,KAAI,UAAKA,EAAL,WAAoBgG,UAAW3C,O,uDCP5D4C,IACKC,IAAIC,KACJC,KAAK,CACFC,UAAW,CACPC,GAAI,CACAC,YCVe,CAC3BC,MAAO,QACPC,OAAQ,SACRC,WAAY,aACZC,aAAc,eACdC,UAAW,YACXC,KAAM,OACN1C,WAAY,aACZ2C,qBAAsB,uBACtBC,mBAAoB,qBACpBC,SAAU,WACVC,KAAM,OACNC,qBAAsB,8BACtBC,KAAM,OACNC,KAAM,OACNC,WAAY,aACZC,iBAAkB,mBAClBC,cAAe,gBACfC,WAAY,aACZC,KAAM,OACNC,cAAe,gBACfC,cAAe,gBACfC,QAAS,eDPb3B,IAAK4B,eAAe,MEFpB,IAAMlL,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiL,SAAU,CACNC,OAAQlL,EAAMkL,OAAOC,OAAS,EAC9BzI,MAAO,YAIA,SAAS0I,IACpB,IAAQrI,EAAaC,qBAAWrD,GAAxBoD,SACAsI,EAA2BC,cAA3BD,uBACA5H,EAAMC,cAAND,EACFnD,EAAUR,IAEhB,EAAgCY,mBAAS,IAAzC,mBAAO6K,EAAP,KAAiBC,EAAjB,KACA,EAA8D9K,mBAAS,IAAvE,mBAAO+K,EAAP,KAAgCC,EAAhC,KACA,EAA0DhL,mBAAS,IAAnE,mBAAOiL,EAAP,KAA8BC,EAA9B,KACA,EAAkClL,mBAAS,IAA3C,mBAAOmL,EAAP,KAAkBC,EAAlB,KACA,EAA8BpL,oBAAS,GAAvC,mBAAOqL,EAAP,KAAgBC,EAAhB,KAEA,EAAgDvL,IAAzCM,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUG,EAAxB,EAAwBA,qBAElB6C,EAAY,uCAAG,WAAOC,GAAP,+BAAAC,EAAA,6DACjBD,EAAME,iBADW,SAEGkH,IAFH,UAEXY,EAFW,OAIbvK,EAAO6J,EAASnH,OAChB8H,EAAsBT,EAAwBrH,OAC9C+H,EAAoBR,EAAsBvH,OAC1CoD,EAAQ4E,EAAuBP,GACrB,KAATnK,EARY,wBASbV,EAASyC,EAAE,cAAeA,EAAE,SAAU,SATzB,8BAYY,KAAxByI,EAZY,wBAablL,EAASyC,EAAE,8BAA+BA,EAAE,SAAU,SAbzC,8BAgBU,KAAtB0I,EAhBY,wBAiBbnL,EAASyC,EAAE,4BAA6BA,EAAE,SAAU,SAjBvC,gCAoBZ+D,EAAMC,OAAS,GApBH,wBAqBbzG,EAAUyC,EAAE,gBAAiBA,EAAE,SAAU,SArB5B,kCAyBbyE,EAAW,CACXxG,KAAO6J,EACPjE,WAAa,CACTmE,EACAE,GAEJnE,MAAQA,GA/BK,UAmCbwE,GAAW,GACPxH,EApCS,UAoCAzB,EApCA,0BAqCU0B,MAAMD,EAAK,CAC9BE,OAAQ,MACRC,KAAMhD,KAAKC,UAAUsG,GACrBtD,YAAa,UACbuD,QAAS,CACL,eAAgB,mBAChBkE,cAAc,UAAD,OAAYJ,MA3CpB,WAqCPpH,EArCO,OA+CbmH,GAAW,GACLnH,EAASC,GAhDF,uBAiDHD,EAjDG,yBAoDMA,EAASE,OApDf,QAoDPuD,EApDO,OAqDbtH,EAASyC,EAAE,iBAAkB9B,KAAKC,UAAU0G,GAAO,WArDtC,mDAwDbnH,EAAqB,EAAD,IAxDP,2DAAH,sDA4DZiL,EAAyB,SAACE,GAC5B,IADsC,EAClC3F,EAAW2F,EAAMC,MAAM,MACvBC,EAAqB,GAFa,cAGpB7F,GAHoB,IAGtC,2BAA6B,CAAC,IAApBkC,EAAmB,QAEX,MADdA,EAAOA,EAAKzE,SAEZoI,EAAmBxH,KAAK6D,IANU,8BAQtC,OAAO2D,GAGX,OACI,gCACA,uBAAMvH,SAAUjB,EAAhB,UACA,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B1B,EAAE,kBAC5B,cAAC2B,EAAA,EAAD,CACIC,MAAO5B,EAAE,cACT6B,OAAO,SACP5D,KAAK,WACL6D,WAAS,EACTJ,QAAQ,WACRsH,YAAY,kCACZjH,MAAO+F,EACP9F,SAAW,SAAAC,GAAC,OAAI8F,EAAY9F,EAAEC,OAAOH,UAGzC,eAACO,EAAA,EAAD,WACA,cAACX,EAAA,EAAD,CACIC,MAAO5B,EAAE,wBACT6B,OAAO,SACP5D,KAAK,WACLyD,QAAQ,WACRsH,YAAY,kCACZjH,MAAOiG,EACPhG,SAAW,SAAAC,GAAC,OAAIgG,EAA2BhG,EAAEC,OAAOH,UAIxD,cAACJ,EAAA,EAAD,CAEIC,MAAO5B,EAAE,sBACT6B,OAAO,SACP5D,KAAK,WACLyD,QAAQ,WACRsH,YAAY,kCACZjH,MAAOmG,EACPlG,SAAW,SAAAC,GAAC,OAAIkG,EAAyBlG,EAAEC,OAAOH,aAItD,cAACJ,EAAA,EAAD,CACI2C,GAAG,oBACH1C,MAAO5B,EAAE,YACTgJ,YAAY,mCACZjH,MAAOqG,EACPpG,SAAW,SAAAC,GAAC,OAAIoG,EAAapG,EAAEC,OAAOH,QACtCkH,WAAS,EACTC,KAAM,EACNxH,QAAQ,WACRI,WAAS,IAEb,cAACQ,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACC,EAAA,EAAD,CACIC,KAAK,SACLhB,QAAQ,YACRzC,MAAM,UACN0D,UAAW,cAAC,IAAD,IAJf,SAKE3C,EAAE,iBAGZ,cAAC5B,EAAD,eAAsBd,IACtB,cAAC6L,EAAA,EAAD,CAAUrM,UAAWD,EAAQ2K,SAAUtK,KAAMoL,EAA7C,SACI,cAACc,EAAA,EAAD,CAAkBnK,MAAM,iB,+DCvJjB,SAASoK,KACpB,IAAQ/J,EAAaC,qBAAWrD,GAAxBoD,SACAsI,EAA2BC,cAA3BD,uBAER,EAAkC3K,mBAAS,IAA3C,mBAAOqM,EAAP,KAAkBC,EAAlB,KAEA,EAAgDvM,IAAzCM,EAAP,EAAOA,MAAiBI,GAAxB,EAAcH,SAAd,EAAwBG,sBAGlBiH,EAAS,uCAAG,kCAAAlE,EAAA,sEACMmH,IADN,cACRY,EADQ,gBAKNzH,EALM,UAKGzB,EALH,wBAMa0B,MAAMD,EAAK,CAC9BE,OAAQ,MACRE,YAAa,UACbuD,QAAS,CACLkE,cAAc,UAAD,OAAYJ,MAVvB,WAMJpH,EANI,QAcKC,GAdL,uBAeAD,EAfA,yBAkBSA,EAASE,OAlBlB,QAkBJuD,EAlBI,OAmBV0E,EAAa1E,EAAK2E,YAnBR,kDAsBV9L,EAAqB,EAAD,IAtBV,0DAAH,qDA8Bf,OAJAoH,qBAAU,WACNH,MACD,IAEK,gCACJ,cAAC8E,GAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,aAAW,mBAAlB,UACI,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,iBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,SAGR,cAACC,GAAA,EAAD,UACKT,EAAUnE,KAAI,SAAC6E,GAAD,OACX,eAACH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWpE,UAAU,KAAKuE,MAAM,MAAhC,SACKD,EAAI1F,KAET,cAACwF,GAAA,EAAD,UAAYE,EAAI/L,OAChB,cAAC6L,GAAA,EAAD,UAAW,cAACrH,EAAA,EAAD,CAAQiD,UAAWwE,IAAMC,GAAE,iBAAYH,EAAI1F,IAA3C,sBALA0F,EAAI/L,gBAWnC,cAACG,EAAD,eAAsBd,O,wCC/BT8M,G,oDAEjB,aAAe,IAAD,+BACV,gBAEKC,gBAHK,E,8CAMd,SAAUC,EAAQC,GACd,IAAIC,EAAIC,KAAKC,KAAKF,EAAEG,OAChBC,EAAIH,KAAKC,KAAKE,EAAED,OAChBE,EAAOJ,KAAKC,KAAKG,KAAKC,KAEtBC,EAAQ,GAiCZ,OAhCAA,GAAK,2CAELP,EAFK,qBAGLA,EAHK,YAGAI,EAHA,qBAIHA,EAJG,yFAQLG,GAAK,6BACCH,EAAE,EADH,oBAEJJ,EAFI,eAEII,EAAE,EAFN,iDAKLG,GAAK,wBACJP,EAAE,EADE,yBAEJA,EAAE,EAFE,eAEMI,EAFN,iDAKLG,GAAO,iBAAF,OACJP,EAAE,EADE,gBACe,GAAPK,EADR,kFAGIA,EAHJ,mBAINP,EAJM,WAMLS,GAAK,0CACcP,EAAY,EAAPK,EADnB,YAC+BD,EAAE,EADjC,yCAEIC,EAFJ,wEAINN,EAJM,e,cAnFT,aAAe,qBACXE,KAAKC,KAAO,CACRF,EAAI,CACAG,OAAS,IACTK,MAAO,CAAEC,IAAK,EAAGC,IAAK,KAE1BN,EAAI,CACAD,OAAS,IACTK,MAAO,CAAEC,IAAK,EAAGC,IAAK,KAEzBL,KAAO,CAAEC,KAAM,K,kDAIxB,WACIL,KAAKC,KAAKF,EAAEW,KAAOV,KAAKC,KAAKF,EAAEG,OAASF,KAAKC,KAAKF,EAAEQ,MAAME,IAC1DT,KAAKC,KAAKE,EAAEO,KAAOV,KAAKC,KAAKE,EAAED,OAASF,KAAKC,KAAKE,EAAEI,MAAME,M,eAG9D,SAAEnJ,GACE,OAAOA,EAAQ0I,KAAKC,KAAKF,EAAEW,O,eAI/B,SAAEpJ,GACE,OAAO0I,KAAKC,KAAKE,EAAED,OAAS5I,EAAQ0I,KAAKC,KAAKE,EAAEO,O,0BAGpD,SAAaC,EAAMC,GACf,MAAM,SAAN,OAAgBA,EAAhB,gEAEDD,EAFC,8BAGIC,EAHJ,YAGkBD,EAHlB,a,oBAMJ,SAAOE,EAAcC,GACDD,EAAaE,cAAc,cACjCC,UAAYF,EACtB,IAAIG,EAAQJ,EACZI,EAAMC,aAAa,QAAS,IAAMlB,KAAKC,KAAKF,EAAEG,QAC9Ce,EAAMC,aAAa,SAAU,IAAMlB,KAAKC,KAAKE,EAAED,Y,MChCxC,SAASiB,KACpB,IAAQtM,EAAaC,qBAAWrD,GAAxBoD,SACAsI,EAA2BC,cAA3BD,uBACAiE,EAAaC,cAAbD,SAEFE,EAAexI,mBAErB,EAAgDvG,IAAzCM,EAAP,EAAOA,MAAiBI,GAAxB,EAAcH,SAAd,EAAwBG,sBAElBsO,EAAW,uCAAG,oCAAAvL,EAAA,sEACImH,IADJ,cACVY,EADU,OAEZyD,EAAUJ,EAFE,SAKR9K,EALQ,UAKCzB,EALD,wBAKyB2M,EALzB,yBAMWjL,MAAMD,EAAK,CAC9BE,OAAQ,OACRE,YAAa,UACbuD,QAAS,CACLkE,cAAc,UAAD,OAAYJ,MAVrB,WAMNpH,EANM,QAcGC,GAdH,uBAeFD,EAfE,yBAkBOA,EAASE,OAlBhB,QAkBNuD,EAlBM,OAmBZqH,EAAUrH,GAnBE,kDAqBZnH,EAAqB,EAAD,IArBR,0DAAH,qDAyBjBoH,qBAAU,WAENkH,MACD,IAEH,IAAME,EAAY,SAACrH,GA+Bf,IA7BA,IAAI6F,EAAO,CACPF,EAAI,CACAG,OAAS,IACTK,MAAO,CACHC,IAAK,IACLC,KAAM,MAGdN,EAAI,CACAD,OAAS,IACTK,MAAO,CACHC,IAAK,IACLC,KAAM,MAGbL,KAAO,CACJC,KAAM,KAIVqB,EAAkBC,OAAOC,KAAKxH,EAAKhB,YACnCyI,EAAQH,EAAgB,GACxBI,EAAQJ,EAAgB,GACxBK,EAAW3H,EAAKhB,WAAWyI,GAC3BG,EAAW5H,EAAKhB,WAAW0I,GAI3BG,EAAS,GACb,MAHiBN,OAAOC,KAAKxH,EAAKd,OAGlC,eAAgC,CAA1B,IAAI4I,EAAM,KACRC,EAAQ/H,EAAKgI,MAAMP,GAAOK,GAC1BG,EAAQjI,EAAKgI,MAAMN,GAAOI,GAC1BI,EAAQ,CACR9O,KAAM4G,EAAKd,MAAM4I,GACjBnC,EAAGoC,EAAMI,IACTpC,EAAGkC,EAAME,IACTC,QAAUL,EAAMM,QAChBC,QAAUL,EAAMI,SAEpBR,EAAOnL,KAAKwL,GAEZrC,EAAKF,EAAEQ,MAAMC,IAAMmC,KAAKnC,IAAIP,EAAKF,EAAEQ,MAAMC,IAAK2B,EAAM3B,KACpDP,EAAKF,EAAEQ,MAAME,IAAMkC,KAAKlC,IAAIR,EAAKF,EAAEQ,MAAME,IAAK0B,EAAM1B,KAEpDR,EAAKE,EAAEI,MAAMC,IAAMmC,KAAKnC,IAAIP,EAAKE,EAAEI,MAAMC,IAAK2B,EAAM3B,KACpDP,EAAKE,EAAEI,MAAME,IAAMkC,KAAKlC,IAAIR,EAAKE,EAAEI,MAAME,IAAK0B,EAAM1B,KAQxD,SAASmC,EAASC,EAAM5C,GAEpB,IAAIF,EAAI8C,EAAK9C,EAAIE,EAAKF,EAAEW,KACpBP,EAAIF,EAAKE,EAAED,OAAS2C,EAAK1C,EAAIF,EAAKE,EAAEO,KACpC8B,EAAUK,EAAKL,QAAUvC,EAAKF,EAAEW,KAChCgC,EAAUG,EAAKH,QAAUzC,EAAKE,EAAEO,KAEhCN,EAAwB,GAAjBH,EAAKG,KAAKC,KAEjB7M,EAAI,UAAMqP,EAAKrP,MACnB,MAAM,oBAAN,OACFuM,EADE,sBAEFI,EAFE,0EAOFJ,EAPE,sBAQFI,EARE,sBASFqC,EATE,sBAUFE,EAVE,oCAWYtC,EAAO,EAXnB,gHAgBeL,EAAIK,EAhBnB,YAgB2BD,EAhB3B,8BAiBKC,EAjBL,qHAoBL5M,EApBK,0DAuBeuM,EAAIK,EAvBnB,YAuB2BD,EAvB3B,8BAwBKC,EAxBL,uEA0BL5M,EA1BK,mBAbJyM,EAAKF,EAAEW,KAAOT,EAAKF,EAAEG,QAAUD,EAAKF,EAAEQ,MAAME,IAAM,GAClDR,EAAKE,EAAEO,KAAOT,EAAKE,EAAED,QAAUD,EAAKE,EAAEI,MAAME,IAAM,GA6ClD,IADA,IAAIE,EAAO,GACX,MAAkBsB,EAAlB,eAA0B,CAEtBtB,GAAQiC,EAFE,KAEa3C,GAG3B,IAAI6C,EAAQ,IAAInD,GAEhBgB,EAAOmC,EAAMC,UAAUhB,EAAUC,GAAYrB,EAI7CmC,EAAME,OAAO1B,EAAajI,QAASsH,IAGvC,OAAQ,gCACJ,qBAAKsC,IAAK3B,EAAclJ,MAAM,MAAM8K,OAAO,MAA3C,SACI,mBAAG7Q,UAAU,YAAY8Q,UAAU,0BAGvC,cAACxP,EAAD,eAAsBd,OC1Jf,SAASuQ,KACpB,IAAQvO,EAAaC,qBAAWrD,GAAxBoD,SACAsI,EAA2BC,cAA3BD,uBACAiE,EAAaC,cAAbD,SAER,EAAgD7O,IAAzCM,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUG,EAAxB,EAAwBA,qBAChBsC,EAAMC,cAAND,EACR,EAAkC/C,mBAAS,CAACqH,GAAIuH,EAAUnD,kBAAmB,GAAID,oBAAoB,GAAI1E,MAAO,KAAhH,mBAAO+J,EAAP,KAAkBC,EAAlB,KAGM/B,EAAW,uCAAG,oCAAAvL,EAAA,sEACImH,IADJ,cACVY,EADU,OAEZyD,EAAUJ,EAFE,SAKR9K,EALQ,UAKCzB,EALD,wBAKyB2M,GALzB,SAMWjL,MAAMD,EAAK,CAC9BE,OAAQ,MACRE,YAAa,UACbuD,QAAS,CACLkE,cAAc,UAAD,OAAYJ,MAVrB,WAMNpH,EANM,QAcGC,GAdH,uBAeFD,EAfE,yBAkBOA,EAASE,OAlBhB,QAkBNuD,EAlBM,OAoBZkJ,EAAa,CAACzJ,GAAI2H,EAASxD,oBAAqB5D,EAAKhB,WAAW,GAAI6E,kBAAmB7D,EAAKhB,WAAW,GAAIE,MAAOqI,OAAO4B,OAAOnJ,EAAKd,OAAOoD,KAAK,QApBrI,kDAsBZzJ,EAAqB,EAAD,IAtBR,0DAAH,qDA0BjBoH,qBAAU,WAENkH,MACD,IAaH,OAAQ,gCACJ,cAACvK,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B1B,EAAE,mBAC5B,cAAC2B,EAAA,EAAD,CACIC,MAAO5B,EAAE,YACT6B,OAAO,SACP5D,KAAK,WACL6D,WAAS,EACTJ,QAAQ,WACRK,MAAO+L,EAAUxJ,GACjBnC,WAAY,CAAEC,UAAU,EAAMC,QAAQ,KAG1C,eAACC,EAAA,EAAD,WACI,cAACX,EAAA,EAAD,CACIC,MAAO5B,EAAE,wBACT6B,OAAO,SACP5D,KAAK,WACLyD,QAAQ,WACRK,MAAO+L,EAAUrF,oBACjBtG,WAAY,CAAEC,UAAU,EAAMC,QAAQ,KAG1C,cAACV,EAAA,EAAD,CAEIC,MAAO5B,EAAE,sBACT6B,OAAO,SACP5D,KAAK,WACLyD,QAAQ,WACRK,MAAO+L,EAAUpF,kBACjBvG,WAAY,CAAEC,UAAU,EAAMC,QAAQ,QAG9C,cAACV,EAAA,EAAD,CACI2C,GAAG,oBACH1C,MAAO5B,EAAE,YACT+B,MAAO+L,EAAU/J,MACjBkF,WAAS,EACTC,KAAM,EACN/G,WAAY,CAAEC,UAAU,EAAMC,QAAQ,GACtCX,QAAQ,WACRI,WAAS,IAGb,cAACW,EAAA,EAAD,CAAQf,QAAQ,YAAYzC,MAAM,UAAUyG,UAAWwE,IAAMC,GAAE,iBAAY0B,EAAZ,WAA/D,SACK7L,EAAE,sBAEP,cAACyC,EAAA,EAAD,CAAQf,QAAQ,YAAYzC,MAAM,UAAUsG,QAzDjB,SAAC/E,GAC5BA,EAAME,iBAEN,IAAIuN,EAAWnS,OAAOC,SAASkS,SACpBnS,OAAOC,SAASmS,KAE3B,IAAI9C,EAAI,UAAM6C,EAAN,aADD,2BACC,uCAAsDpC,GAC9DsC,UAAUC,UAAUC,UAAUjD,GAC9B7N,EAAS,+BAAgC,+BAA6B,YAiDtE,SACKyC,EAAE,gBAEP,cAAC5B,EAAD,eAAsBd,OCzEfgR,oBA1Bf,WACI,IAAM5O,EAASD,cAATC,KACEM,EAAMC,cAAND,EAGR,OACI,gCACI,cAAC,EAAD,IACA,cAACrD,EAAD,UACI,eAAC,IAAD,WACI,eAAC4R,EAAA,EAAD,CAAa5E,aAAW,8BAAxB,UACI,cAAClH,EAAA,EAAD,CAAQiD,UAAWwE,IAAMC,GAAG,cAA5B,SAA2CnK,EAAE,eAC7C,cAACyC,EAAA,EAAD,CAAQiD,UAAWwE,IAAMC,GAAG,gBAA5B,SAA6CnK,EAAE,qBAEnD,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyF,OAAK,EAAC/F,KAAI,UAAKA,EAAL,WAAoBgG,UAAWiC,IAChD,cAAC,IAAD,CAAOlC,OAAK,EAAC/F,KAAI,UAAKA,EAAL,SAAkBgG,UAAW2D,KAC9C,cAAC,IAAD,CAAO5D,OAAK,EAAC/F,KAAI,UAAKA,EAAL,qBAA8BgG,UAAWkG,KAC1D,cAAC,IAAD,CAAOnG,OAAK,EAAC/F,KAAI,UAAKA,EAAL,cAAuBgG,UAAWmI,kBAQ3B,CAE5CW,cAAe,kBAAM,0E,UCjCV,SAASC,KAENxO,cAAND,EAER,OACI,gCACI,cAAC,EAAD,IACA,cAACrD,EAAD,UACI,cAAC8F,EAAA,EAAD,CAAQxD,MAAM,UAAUyC,QAAQ,YAAYoJ,KAAK,QAAQpF,UAAWwE,IAAMC,GAAG,SAA7E,wBCLD,SAAS3E,KAEpB,OACI,eAAC,EAAYkJ,SAAb,CAAsB3M,MAAO,CACzBzC,SAAUqP,uCADd,UAGI,cAACC,GAAA,EAAD,IACA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlP,KAAK,gBAAgBgG,UAAWmJ,IACvC,cAAC,IAAD,CAAOnP,KAAK,SAASgG,UAAWoJ,KAChC,cAAC,IAAD,CAAOpP,KAAK,IAAIgG,UAAW+I,aChB/CM,IAAStB,OACP,cAAC,IAAMuB,WAAP,UACI,cAAC,IAAD,CACIC,OAAQN,6BACRO,SAAUP,mCACVQ,SAAUR,6CACVS,YAAatT,OAAOC,SAASsT,OAJjC,SAMA,cAAC,GAAD,QAGJC,SAASC,eAAe,SnB0HpB,kBAAmBpB,WACrBA,UAAUqB,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7L,QAAQ6L,MAAMA,EAAM3S,c","file":"static/js/main.a260fc8d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3)\n    }\n}));\n\nexport default function BorderContainer(props) {\n    const classes = useStyles()\n\n    return (<div className={classes.root}>\n        {props.children}\n    </div>)\n}","import Collapse from \"@material-ui/core/Collapse\";\nimport {Alert, AlertTitle} from \"@material-ui/lab\";\nimport React from \"react\";\n\nexport const useAlert = () => {\n    const [alert, setAlert] = React.useState({ open: false, message: '', title: '', severity: \"error\" });\n\n    const alertSetter = (message, title, severity) =>\n    {\n        setAlert({\n            open: true, message: message, title: title, severity: severity, closeFunction: () => {\n                setAlert({...alert, open: false});\n            }\n        });\n    }\n\n    return {\n        alert: alert,\n        setAlert: alertSetter,\n        handleFetchWithAlert : (exception) => {\n            if ( exception instanceof String )\n                alertSetter(\"Error\", exception, \"error\");\n            else if ( exception instanceof Response)\n                alertSetter(`Error ${exception.status}`, `${exception.statusText}`, \"error\");\n            else if ( exception instanceof Error )\n                alertSetter(`${exception.name}`, `${exception.message}`, \"error\")\n            else\n                alertSetter(\"Error\", JSON.stringify(exception), \"error\");\n        }\n    }\n}\n\nexport default function CollapsableAlert({ open, severity, title, message, closeFunction}) {\n\n    return (<Collapse in={open}>\n        <Alert onClose={closeFunction} severity={severity}>\n            <AlertTitle>{title}</AlertTitle>\n            {message}\n        </Alert>\n    </Collapse>);\n};\n","export default __webpack_public_path__ + \"static/media/aigraphs_full.9014a28b.png\";","import React from \"react\";\nimport {\n    AppBar as MuiAppBar,\n    IconButton,\n    Toolbar, Typography,\n} from \"@material-ui/core\";\nimport logo from '../assets/images/aigraphs_full.png'\n\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    logo: {\n        maxWidth: 150,\n        marginRight: '10px'\n    }\n}));\n\nexport default function AppBar () {\n    const classes = useStyles();\n\n    return (\n        <MuiAppBar position=\"static\" color=\"transparent\">\n            <Toolbar>\n                <img src={logo} alt=\"Aigraphs\" className={classes.logo} />\n            </Toolbar>\n        </MuiAppBar>\n       );\n\n\n}\n","import React, {useContext, useState} from \"react\";\nimport {Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Context from \"../../base/controller/Context\";\nimport BorderContainer from \"../../base/component/BorderContainer\";\nimport {useHistory, useRouteMatch, useLocation} from \"react-router-dom\";\nimport CollapsableAlert, {useAlert} from \"../../base/component/CollapsableAlert\";\nimport {useTranslation} from \"react-i18next\";\nimport AppBar from \"../../base/component/AppBar\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport default function GraphMemberJoin() {\n    const { endpoint } = useContext(Context);\n    let { path } = useRouteMatch();\n    const history = useHistory();\n    let query = useQuery();\n    const { t } = useTranslation();\n\n    const [name, setName] = useState('');\n    const [partyId, setPartyId] = useState(query.has('party_id') ? query.get('party_id') : '');\n\n    const {alert, setAlert, handleFetchWithAlert} = useAlert();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        let normalizedName = name.trim();\n        if ( normalizedName === \"\" ) {\n            setAlert(t(\"name_is_empty\"), t(\"error\"), \"error\")\n            return;\n        }\n        let form_data = new FormData();\n        form_data.set('name', name);\n        form_data.set('party_id', partyId);\n        try {\n\n            let url = `${endpoint}/party_member/join`;\n            const response = await fetch(url, {\n                method: 'PUT',\n                body: form_data,\n                credentials: 'include'\n            });\n\n            if ( !response.ok ) {\n                throw response;\n            }\n\n            const data = await response.json();\n            history.push(`/graph_member/submit`);\n\n        } catch (exception) {\n            handleFetchWithAlert(exception);\n        }\n    }\n\n    return (\n        <div>\n        <AppBar/>\n        <BorderContainer>\n        <form onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{t(\"join_to_graph\")}</Typography>\n        <TextField\n            label={t(\"your_nickname\")}\n            margin=\"normal\"\n            name=\"name\"\n            fullWidth\n            variant=\"outlined\"\n            value={name}\n            onChange={ e => setName(e.target.value)}\n\n        />\n        <TextField\n            label={t(\"graph_code\")}\n            name=\"party id\"\n            margin=\"normal\"\n            fullWidth\n            InputProps={{ readOnly: true, shrink: true}}\n            variant=\"outlined\"\n            value={partyId}\n            onChange={ e => setPartyId(e.target.value)}\n        />\n        <Box pt={2} pb={1}>\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<SaveIcon />}\n            >{t(\"join\")}</Button>\n        </Box>\n    </form>\n    <CollapsableAlert {...alert} />\n    </BorderContainer>\n        </div>);\n}","import React, {useContext, useEffect} from \"react\";\nimport BorderContainer from \"../../base/component/BorderContainer\";\nimport Context from \"../../base/controller/Context\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport {Chip, List, ListItem, ListItemText} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport CollapsableAlert, {useAlert} from \"../../base/component/CollapsableAlert\";\nimport {useTranslation} from \"react-i18next\";\nimport AppBar from \"../../base/component/AppBar\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    chip: {\n        width: \"50ch\",\n        textAlign: \"center\"\n    },\n}));\n\nexport default function GraphMemberSubmit() {\n    const { endpoint } = useContext(Context);\n\n    const [dimensionName, setDimensionName] = React.useState(\"\");\n    const [itemList, setItemList] = React.useState([])\n    const classes = useStyles();\n\n    const {alert, setAlert, handleFetchWithAlert} = useAlert();\n    const [hasNext, setHasNext] = React.useState(true);\n    const { t } = useTranslation();\n\n    let _this = React.useRef({\n        itemList:[],\n        dimensionList:[],\n        currentDimension : 0,\n        submitData : {},\n    });\n\n    const saveSubmitData = () => {\n        let dimensionId = _this.current.dimensionList[_this.current.currentDimension].id;\n\n    }\n\n    const setDimensionOptions = (nextDimension) => {\n        let dimensions = _this.current.dimensionList;\n        let items = _this.current.itemList;\n        if ( nextDimension >= dimensions.length ) {\n            return;\n        }\n\n\n        console.log(nextDimension);\n        console.log(dimensions);\n\n        setItemList(items);\n        setDimensionName(dimensions[nextDimension].name);\n        _this.current.currentDimension = nextDimension;\n        setHasNext(nextDimension < dimensions.length - 1);\n    }\n\n    const saveCurrentData = () => {\n        let dimensionData = {};\n        let index = itemList.length;\n        for ( let item of itemList ) {\n            dimensionData[item.id] = index;\n            index --;\n        }\n\n        let currentDimensionIndex = _this.current.currentDimension;\n        let currentDimensionId = _this.current.dimensionList[currentDimensionIndex].id;\n        _this.current.submitData[currentDimensionId] = dimensionData;\n    }\n\n    const handleNextClicked = () => {\n\n        saveCurrentData();\n        let currentDimensionIndex = _this.current.currentDimension;\n        setDimensionOptions(currentDimensionIndex + 1);\n    }\n\n    const handleSubmit = async() => {\n        saveCurrentData();\n        try {\n            //dim -> item -> value\n            let jsonData = _this.current.submitData\n\n            let url = `${endpoint}/chart/party_member/submit`;\n            const response = await fetch(url, {\n                method: 'PUT',\n                credentials: 'include',\n                body: JSON.stringify(jsonData),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            if ( !response.ok ) {\n                throw response;\n            }\n            setAlert(t(\"sent_options_message\"), t(\"sent\"),\"success\")\n\n        } catch (exception) {\n            handleFetchWithAlert(exception)\n        }\n    }\n\n    const fetchList = async () => {\n\n        try {\n            let url = `${endpoint}/chart/party_member/data`;\n            const response = await fetch(url, {\n                method: 'GET',\n                credentials: 'include'\n            });\n\n            if ( !response.ok ) {\n                throw response;\n            }\n\n            let data = await response.json();\n            _this.current.itemList = [];\n            for ( let key in data.items ) {\n                _this.current.itemList.push({id: key, name : data.items[key]});\n            }\n            _this.current.dimensionList = [];\n            for ( let key in data.dimensions ) {\n                _this.current.dimensionList.push({id: key, name : data.dimensions[key]});\n            }\n            _this.current.currentDimension = 0;\n            setDimensionOptions(0);\n\n        } catch (exception) {\n            handleFetchWithAlert(exception)\n        }\n    }\n\n    useEffect(() => {\n        fetchList();\n    }, []);\n\n    return (\n        <div>\n        <AppBar/>\n            <BorderContainer>\n        <h1>{t(\"sort_by\")} <span>{dimensionName}</span></h1>\n        <List>\n            <ReactSortable list={itemList} setList={setItemList} animation={200}>\n            {itemList.map(item => (\n                <ListItem key={item.id}>\n                    <Chip color=\"primary\" variant=\"outlined\" label={item.name} className={classes.chip}></Chip>\n                </ListItem>\n            ))}\n            </ReactSortable>\n        </List>\n\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={hasNext ? handleNextClicked : handleSubmit}\n        >{hasNext ? t(\"next\") : t(\"send\")}</Button>\n        <CollapsableAlert {...alert} />\n        </BorderContainer>\n        </div>)\n}","import React from \"react\";\nimport {Switch, Route, useRouteMatch} from \"react-router-dom\";\n\nimport GraphMemberJoin from \"./GraphMemberJoin\";\nimport GraphMemberSubmit from \"./GraphMemberSubmit\";\n\nexport default function Main() {\n    let { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route exact path={`${path}/join`} component={GraphMemberJoin}/>\n            <Route exact path={`${path}/submit`} component={GraphMemberSubmit}/>\n        </Switch>\n    );\n}\n\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport { TRANSLATIONS_EN } from \"./en/translations\";\n\ni18n\n    .use(initReactI18next)\n    .init({\n        resources: {\n            en: {\n                translation: TRANSLATIONS_EN\n            },\n        }\n    });\n\ni18n.changeLanguage(\"en\");","export const TRANSLATIONS_EN = {\n    graph: \"graph\",\n    create: \"create\",\n    graph_name: \"graph name\",\n    create_graph: \"create graph\",\n    my_graphs: \"my graphs\",\n    back: \"back\",\n    dimensions: \"dimensions\",\n    horizontal_dimension: \"horizontal dimension\",\n    vertical_dimension: \"vertical dimension\",\n    elements: \"elements\",\n    sent: \"sent\",\n    sent_options_message: \"your options has been sent.\",\n    send: \"send\",\n    next: \"next\",\n    share_link: \"share link\",\n    generate_results: \"generate results\",\n    graph_created: \"graph created\",\n    graph_code: \"graph code\",\n    join: \"join\",\n    join_to_graph: \"join to graph\",\n    your_nickname: \"your nickname\",\n    sort_by: \"sort by\"\n};","import React, {useContext, useState} from \"react\";\nimport {Backdrop, CircularProgress, Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Context from \"../../base/controller/Context\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../translations/i18n\"\nimport CollapsableAlert, {useAlert} from \"../../base/component/CollapsableAlert\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nexport default function GraphCreate() {\n    const { endpoint } = useContext(Context);\n    const { getAccessTokenSilently } = useAuth0();\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [formName, setFormName] = useState('');\n    const [formHorizontalDimension, setFormHorizontalDimension] = useState('');\n    const [formVerticalDimension, setFormVerticalDimension] = useState('');\n    const [formItems, setFormItems] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const {alert, setAlert, handleFetchWithAlert} = useAlert();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const token = await getAccessTokenSilently();\n\n        let name = formName.trim();\n        let horizontalDimension = formHorizontalDimension.trim();\n        let verticalDimension = formVerticalDimension.trim();\n        let items = normalizeFormItemInput(formItems);\n        if ( name === \"\" ) {\n            setAlert(t(\"empty_name\"), t(\"error\"), \"error\")\n            return;\n        }\n        if ( horizontalDimension === \"\" ) {\n            setAlert(t(\"empty_horizontal_dimension\"), t(\"error\"), \"error\")\n            return;\n        }\n        if ( verticalDimension === \"\" ) {\n            setAlert(t(\"empty_vertical_dimension\"), t(\"error\"), \"error\")\n            return;\n        }\n        if ( items.length < 2 ) {\n            setAlert( t(\"to_few_items\"), t(\"error\"), \"error\")\n            return;\n        }\n\n        let jsonData = {\n            name : formName,\n            dimensions : [\n                formHorizontalDimension,\n                formVerticalDimension\n            ],\n            items : items\n        }\n\n        try {\n            setLoading(true);\n            let url = `${endpoint}/v/1.0/chart`;\n            const response = await fetch(url, {\n                method: 'PUT',\n                body: JSON.stringify(jsonData),\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n            });\n\n            setLoading(false);\n            if ( !response.ok ) {\n                throw response;\n            }\n\n            const data = await response.json();\n            setAlert(t(\"graph_created\"), JSON.stringify(data), \"success\")\n\n        } catch (exception) {\n            handleFetchWithAlert(exception);\n        }\n    }\n\n    const normalizeFormItemInput = (input) => {\n        let itemList = input.split(\"\\n\");\n        let normalizedItemList = [];\n        for ( let item of itemList ) {\n            item = item.trim();\n            if ( item === \"\" ) continue;\n            normalizedItemList.push(item);\n        }\n        return normalizedItemList;\n    }\n\n    return (\n        <div>\n        <form onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{t(\"create_graph\")}</Typography>\n        <TextField\n            label={t(\"graph_name\")}\n            margin=\"normal\"\n            name=\"formName\"\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Ponle un nombre a tu gráfico\"\n            value={formName}\n            onChange={ e => setFormName(e.target.value)}\n\n        />\n        <Box>\n        <TextField\n            label={t(\"horizontal_dimension\")}\n            margin=\"normal\"\n            name=\"formName\"\n            variant=\"outlined\"\n            placeholder=\"Ponle un nombre a tu gráfico\"\n            value={formHorizontalDimension}\n            onChange={ e => setFormHorizontalDimension(e.target.value)}\n\n        />\n\n        <TextField\n\n            label={t(\"vertical_dimension\")}\n            margin=\"normal\"\n            name=\"formName\"\n            variant=\"outlined\"\n            placeholder=\"Ponle un nombre a tu gráfico\"\n            value={formVerticalDimension}\n            onChange={ e => setFormVerticalDimension(e.target.value)}\n\n        />\n        </Box>\n        <TextField\n            id=\"standard-textarea\"\n            label={t(\"elements\")}\n            placeholder=\"Escribe un elemento por línea\"\n            value={formItems}\n            onChange={ e => setFormItems(e.target.value)}\n            multiline\n            rows={6}\n            variant=\"outlined\"\n            fullWidth\n        />\n        <Box pt={2} pb={1}>\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<SaveIcon />}\n            >{t(\"create\")}</Button>\n        </Box>\n    </form>\n    <CollapsableAlert {...alert} />\n    <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n    </Backdrop>\n    </div>);\n}","import React, {useContext, useState, useEffect} from \"react\";\nimport Context from \"../../base/controller/Context\";\nimport Collapse from '@material-ui/core/Collapse';\nimport {Alert, AlertTitle} from \"@material-ui/lab\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport CollapsableAlert, {useAlert} from \"../../base/component/CollapsableAlert\";\n\nexport default function GraphList() {\n    const { endpoint } = useContext(Context);\n    const { getAccessTokenSilently } = useAuth0();\n\n    const [partyList, setPartyList] = useState([])\n\n    const {alert, setAlert, handleFetchWithAlert} = useAlert();\n\n\n    const fetchList = async () => {\n        const token = await getAccessTokenSilently();\n\n        try {\n\n            let url = `${endpoint}/party/list`;\n            const response = await fetch(url, {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                    Authorization: `Bearer ${token}`\n                },\n            });\n\n            if ( !response.ok ) {\n                throw response;\n            }\n\n            const data = await response.json();\n            setPartyList(data.party_list);\n\n        } catch (exception) {\n            handleFetchWithAlert(exception);\n        }\n    }\n\n    useEffect(() => {\n        fetchList()\n    }, []);\n\n    return (<div>\n        <TableContainer>\n            <Table aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Id</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {partyList.map((row) => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.id}\n                            </TableCell>\n                            <TableCell>{row.name}</TableCell>\n                            <TableCell><Button component={Link} to={`/graph/${row.id}`}>View</Button></TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n        <CollapsableAlert {...alert} /></div>)\n}","class Chart {\n    constructor() {\n        this.area = {\n            x : {\n                extent : 400,\n                range: { min: 0, max: 10 }\n            },\n            y : {\n                extent : 400,\n                range: { min: 0, max: 10 }\n            }\n            ,font : { size: 15 }\n        };\n    }\n\n    calculateUnit() {\n        this.area.x.unit = this.area.x.extent / this.area.x.range.max;\n        this.area.y.unit = this.area.y.extent / this.area.y.range.max;\n    }\n\n    x(value) {\n        return value * this.area.x.unit;\n\n    }\n\n    y(value) {\n        return this.area.y.extent - value * this.area.y.unit;\n    }\n\n    drawGlowText(text, attributes) {\n        return `<text ${attributes}\n    style=\"stroke:white; stroke-width:0.6em\"\n    >${text}</text>\n    <text ${attributes}>${text}</text>`\n    }\n\n    render(imageElement, content) {\n        let container = imageElement.querySelector('.container');\n        container.innerHTML = content;\n        let image = imageElement;\n        image.setAttribute('width', 200 + this.area.x.extent);\n        image.setAttribute('height', 200 + this.area.y.extent);\n    }\n};\n\n\nexport default class AmbitionMatrix extends Chart {\n\n    constructor() {\n        super();\n\n        this.calculateUnit();\n    }\n\n    drawFrame(labelX, labelY) {\n        let x = this.area.x.extent;\n        let y = this.area.y.extent;\n        let font = this.area.font.size;\n\n        let frame = \"\";\n        frame += `<polygon\n    points=\"0,0\n      ${x},0\n      ${x},${y}\n      0,${y}\"\n    stroke-linecap=\"square\"\n    style=\"fill:none;stroke:#DDD;stroke-width:2px\" />`;\n\n        frame += `<line\n    x1=0 y1=${y/2}\n    x2=${x} y2=${y/2}\n    style=\"stroke:#DDD;stroke-width:2px\" />`;\n\n        frame +=   `<line\n    x1=${x/2} y1=0\n    x2=${x/2} y2=${y}\n    style=\"stroke:#DDD;stroke-width:2px\" />`;\n\n        frame+= `<text\n    x=\"${x/2}\" y=\"${-font * 2}\"\n    dominant-baseline=\"middle\" text-anchor=\"middle\"\n    font-size=\"${font}\"\n    >${labelX}</text>`;\n\n        frame += `<text\n    transform=\"translate(${x +  font * 2},${y/2}) rotate(90)\"\n    font-size=\"${font}\"\n    dominant-baseline=\"middle\" text-anchor=\"middle\"\n    >${labelY}</text>`;\n\n\n\n        return frame;\n    }\n};","import React, {useContext, useState, useRef, useEffect} from \"react\";\nimport Context from \"../../base/controller/Context\";\nimport Collapse from '@material-ui/core/Collapse';\nimport {Alert, AlertTitle} from \"@material-ui/lab\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport AmbitionMatrix from \"./Chart\";\nimport { useParams } from \"react-router-dom\";\nimport CollapsableAlert, {useAlert} from \"../../base/component/CollapsableAlert\";\n\nexport default function GraphResult() {\n    const { endpoint } = useContext(Context);\n    const { getAccessTokenSilently } = useAuth0();\n    const { party_id } = useParams();\n\n    const svgContainer = useRef();\n\n    const {alert, setAlert, handleFetchWithAlert} = useAlert();\n\n    const fetchResult = async () => {\n        const token = await getAccessTokenSilently();\n        let chartId = party_id;\n        try {\n\n            let url = `${endpoint}/v/1.0/chart/${chartId}/make_result`;\n            const response = await fetch(url, {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    Authorization: `Bearer ${token}`\n                },\n            });\n\n            if ( !response.ok ) {\n                throw response;\n            }\n\n            const data = await response.json();\n            drawChart(data);\n        } catch (exception) {\n            handleFetchWithAlert(exception);\n        }\n    }\n\n    useEffect(() => {\n\n        fetchResult();\n    }, []);\n\n    const drawChart = (data) => {\n\n        let area = {\n            x : {\n                extent : 400,\n                range: {\n                    min: 100000000,\n                    max: -10000000\n                }\n            },\n            y : {\n                extent : 400,\n                range: {\n                    min: 100000000,\n                    max: -10000000\n                }\n            }\n            ,font : {\n                size: 15\n            }\n        };\n\n        let dimensionIdList = Object.keys(data.dimensions);\n        let axisX = dimensionIdList[0];\n        let axisY = dimensionIdList[1];\n        let dimXName = data.dimensions[axisX];\n        let dimYName = data.dimensions[axisY];\n\n        let itemIdList = Object.keys(data.items);\n\n        let points = [];\n        for ( let itemId of itemIdList) {\n            let itemX = data.stats[axisX][itemId];\n            let itemY = data.stats[axisY][itemId];\n            let point = {\n                name: data.items[itemId],\n                x: itemX.avg,\n                y: itemY.avg,\n                stdDevX : itemX.std_dev,\n                stdDevY : itemY.std_dev,\n            }\n            points.push(point);\n\n            area.x.range.min = Math.min(area.x.range.min, itemX.min);\n            area.x.range.max = Math.max(area.x.range.max, itemX.max);\n\n            area.y.range.min = Math.min(area.y.range.min, itemX.min);\n            area.y.range.max = Math.max(area.y.range.max, itemX.max);\n\n        }\n\n\n        area.x.unit = area.x.extent / (area.x.range.max + 1);\n        area.y.unit = area.y.extent / (area.y.range.max + 1);\n\n        function putPoint(elem, area) {\n\n            let x = elem.x * area.x.unit;\n            let y = area.y.extent - elem.y * area.y.unit;\n            let stdDevX = elem.stdDevX * area.x.unit;\n            let stdDevY = elem.stdDevY * area.y.unit;\n\n            let font = area.font.size * 0.8;\n\n            let name = `${elem.name}`;\n            return `<circle\n    cx=\"${x}\"\n    cy=\"${y}\"\n    r=\"3\"\n    fill=\"black\" />\n    \n    <ellipse\n    cx=\"${x}\"\n    cy=\"${y}\"\n    rx=\"${stdDevX}\"\n    ry=\"${stdDevY}\"\n    stroke-dasharray=\"${font / 3}\"\n    style=\"stroke:#AAA;stroke-width:1px;fill:none\"\n    />\n\n    <text\n    transform=\"translate(${x + font},${y})\"\n    font-size=\"${font}\"\n    dominant-baseline=\"middle\" text-anchor=\"start\"\n    style=\"stroke:white; stroke-width:0.6em\"\n    >${name}</text>\n\n    <text\n    transform=\"translate(${x + font},${y})\"\n    font-size=\"${font}\"\n    dominant-baseline=\"middle\" text-anchor=\"start\"\n    >${name}</text>\n\n    `\n        }\n\n\n        let text = \"\";\n        for ( let elem of points) {\n\n            text += putPoint(elem, area);\n        }\n\n        let chart = new AmbitionMatrix();\n\n        text = chart.drawFrame(dimXName, dimYName) + text;\n\n\n\n        chart.render(svgContainer.current, text);\n    }\n\n    return (<div>\n        <svg ref={svgContainer} width=\"800\" height=\"800\">\n            <g className=\"container\" transform=\"translate(100, 100)\">\n            </g>\n        </svg>\n        <CollapsableAlert {...alert} />\n    </div>)\n}","import React, {useContext, useState, useRef, useEffect} from \"react\";\nimport Context from \"../../base/controller/Context\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport CollapsableAlert, {useAlert} from \"../../base/component/CollapsableAlert\";\nimport {useTranslation} from \"react-i18next\";\nimport {Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default function GraphDetails() {\n    const { endpoint } = useContext(Context);\n    const { getAccessTokenSilently } = useAuth0();\n    const { party_id } = useParams();\n\n    const {alert, setAlert, handleFetchWithAlert} = useAlert();\n    const { t } = useTranslation();\n    const [graphData, setGraphData] = useState({id: party_id, verticalDimension: \"\", horizontalDimension:\"\", items: \"\"})\n\n\n    const fetchResult = async () => {\n        const token = await getAccessTokenSilently();\n        let chartId = party_id;\n        try {\n\n            let url = `${endpoint}/v/1.0/chart/${chartId}`;\n            const response = await fetch(url, {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                    Authorization: `Bearer ${token}`\n                },\n            });\n\n            if ( !response.ok ) {\n                throw response;\n            }\n\n            const data = await response.json();\n\n            setGraphData({id: chartId, horizontalDimension: data.dimensions[0], verticalDimension: data.dimensions[1], items: Object.values(data.items).join(\"\\n\")})\n        } catch (exception) {\n            handleFetchWithAlert(exception)\n        }\n    }\n\n    useEffect(() => {\n\n        fetchResult();\n    }, []);\n\n    const handleShareLinkClicked = (event) => {\n        event.preventDefault();\n\n        let protocol = window.location.protocol;\n        let host = window.location.host;\n        host = \"amigraph.alpha.labo86.cl\"\n        let text = `${protocol}//${host}/graph_member/join?party_id=${party_id}`;\n        navigator.clipboard.writeText(text);\n        setAlert(\"Link copiado al portapapeles\", \"Compártelo con tus amigos\", \"success\");\n    }\n\n    return (<div>\n        <Typography variant=\"h6\">{t(\"graph_details\")}</Typography>\n        <TextField\n            label={t(\"graph_id\")}\n            margin=\"normal\"\n            name=\"formName\"\n            fullWidth\n            variant=\"outlined\"\n            value={graphData.id}\n            InputProps={{ readOnly: true, shrink: true}}\n\n        />\n        <Box>\n            <TextField\n                label={t(\"horizontal_dimension\")}\n                margin=\"normal\"\n                name=\"formName\"\n                variant=\"outlined\"\n                value={graphData.horizontalDimension}\n                InputProps={{ readOnly: true, shrink: true}}\n\n            />\n            <TextField\n\n                label={t(\"vertical_dimension\")}\n                margin=\"normal\"\n                name=\"formName\"\n                variant=\"outlined\"\n                value={graphData.verticalDimension}\n                InputProps={{ readOnly: true, shrink: true }}\n            />\n        </Box>\n        <TextField\n            id=\"standard-textarea\"\n            label={t(\"elements\")}\n            value={graphData.items}\n            multiline\n            rows={6}\n            InputProps={{ readOnly: true, shrink: true }}\n            variant=\"outlined\"\n            fullWidth\n        />\n\n        <Button variant=\"contained\" color=\"primary\" component={Link} to={`/graph/${party_id}/result`}>\n            {t(\"generate_results\")}\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleShareLinkClicked}>\n            {t(\"share_link\")}\n        </Button>\n        <CollapsableAlert {...alert} /></div>)\n}","import React from \"react\";\nimport {BrowserRouter, Switch, Route, useRouteMatch, Link} from \"react-router-dom\";\n\nimport {withAuthenticationRequired} from '@auth0/auth0-react';\nimport {Button, ButtonGroup} from \"@material-ui/core\";\nimport GraphCreate from \"./GraphCreate\";\nimport GraphList from \"./GraphList\";\nimport GraphResult from \"./GraphResult\";\nimport GraphDetails from \"./GraphDetails\";\nimport BorderContainer from \"../../base/component/BorderContainer\";\nimport AppBar from \"../../base/component/AppBar\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction Main() {\n    let { path } = useRouteMatch();\n    const { t } = useTranslation();\n\n\n    return (\n        <div>\n            <AppBar/>\n            <BorderContainer>\n                <BrowserRouter>\n                    <ButtonGroup aria-label=\"small outlined button group\">\n                        <Button component={Link} to=\"/graph/list\">{t(\"my_graphs\")}</Button>\n                        <Button component={Link} to=\"/graph/create\">{t(\"create_graph\")}</Button>\n                    </ButtonGroup>\n                    <Switch>\n                        <Route exact path={`${path}/create`} component={GraphCreate}/>\n                        <Route exact path={`${path}/list`} component={GraphList}/>\n                        <Route exact path={`${path}/:party_id/result`} component={GraphResult}/>\n                        <Route exact path={`${path}/:party_id`} component={GraphDetails}/>\n                    </Switch>\n                </BrowserRouter>\n            </BorderContainer>\n        </div>\n        );\n}\n\nexport default withAuthenticationRequired(Main, {\n    // Show a message while the user waits to be redirected to the login page.\n    onRedirecting: () => <div>Redirecting you to the login page...</div>,\n});\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport BorderContainer from \"../component/BorderContainer\";\nimport AppBar from \"../component/AppBar\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Home () {\n\n    const { t } = useTranslation();\n\n    return (\n        <div>\n            <AppBar/>\n            <BorderContainer>\n                <Button color=\"primary\" variant=\"contained\" size=\"large\" component={Link} to=\"/graph\">Login</Button>\n            </BorderContainer>\n        </div>);\n\n\n}\n\n\n\n","import React from \"react\";\n\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport GraphMemberMain from \"../../graph_member/view/Main\";\nimport GraphMain from \"../../graph/view/Main\";\n\nimport BaseContext from \"../controller/Context\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./Home\";\n\nexport default function Main () {\n\n    return (\n        <BaseContext.Provider value={{\n            endpoint: process.env.REACT_APP_API_URL\n        }}>\n            <CssBaseline />\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/graph_member\" component={GraphMemberMain}/>\n                    <Route path=\"/graph\" component={GraphMain}/>\n                    <Route path=\"/\" component={Home}/>\n                </Switch>\n\n            </BrowserRouter>\n        </BaseContext.Provider>);\n\n\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Main from \"./modules/base/view/Main\";\nimport {Auth0Provider} from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Auth0Provider\n          domain={process.env.REACT_APP_AUTH0_DOMAIN}\n          clientId={process.env.REACT_APP_AUTH0_CLIENT_ID}\n          audience={process.env.REACT_APP_AUTH0_AUDIENCE}\n          redirectUri={window.location.origin}\n      >\n      <Main/>\n      </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}